generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String         @id @default(uuid())
  username     String
  password     String
  email        String         @unique
  createdAt    DateTime       @default(now())
  lastUpdate   DateTime       @updatedAt
  avatarUrl    String?
  messages     Messages[]
  party        Party[]
  partyMembers PartyMembers[]
}

model Video {
  id        String      @id @default(uuid())
  name      String
  length    Int
  URL       String
  thumbnail String
  banner    String
  videotype      VideoType
  genre_id  String
  favorites Favorites[]
  genre     Genre       @relation(fields: [genre_id], references: [id])
}

model Party {
  id           String         @id @default(uuid())
  owner_id     String
  messages     Messages[]
  owner        User           @relation(fields: [owner_id], references: [id])
  partyMembers PartyMembers[]
}

model PartyMembers {
  id       String @id @default(uuid())
  user_id  String
  party_id String
  party    Party  @relation(fields: [party_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])
}

model Messages {
  id        String   @id @default(uuid())
  party_id  String
  sender_id String
  text      String
  createdAt DateTime @default(now())
  party     Party    @relation(fields: [party_id], references: [id])
  sender    User     @relation(fields: [sender_id], references: [id])
}

model Genre {
  id    String  @id @default(uuid())
  name  String
  video Video[]
}

model Favorites {
  id       String   @id @default(uuid())
  video_id String
  addedAt  DateTime
  video    Video    @relation(fields: [video_id], references: [id])
}

enum VideoType {
  MOVIE
  SERIES
}
